 rebase의 --interactive를 사용
 -작업공간이 깨끗한 이후, 이전 여러개의 커밋을 수정
 이전 커밋을 다시 작성한 경우 새 아이디가 부여

 -rebase의 --interactive를 사요하여 커밋 시퀀스를 새로운 기본 커밋에 결합
 $ git rebase-i HEAD~3
 $ git rebase--interactive HEAD~3
 HEAD~ 3:수정할 커밋의 직전 커밋
 실제 HEAD~2부터 수정 가능

 -$ git rebase--interactive HEAD~3
 기본 편집기로 열리며, HEAD~3이면 HEAD~2,HEAD~1,HEAD3개의 행을 편집 가능
 로그 결과와 다르게 오래된 커밋으로부터 표시

 -주요 rebase-i대화형 명령어
 p(ick):해당 커밋을 수정하지 않고 그대로 사용
 r(eword): 개별 커밋 메시지를 다시 작성
 s(quash): 계속된 이후 커밋을 이전 커밋에 결합
 d(rop): 커밋 자체를 삭제 

 명령squash방법
 -이후 것을 이전 커밋에 뭉치는 방법
 상위에 위피한 커밋에 pick이 있으면서
 (아래에 연속적으로 squash이 명령
 (다음으로 커밋E가 커밋BB에 뭉쳐져 커밋E가 제거됨

 -새로운 커밋 메시지를 입력하는 단계가 있음
 기본 편집기로 편집
 (BB와E를 합친 커밋 메시지를 지정
 
